class Solution{
  public:
    vector<int> duplicates(int arr[], int n) {
        // code here
        
        unordered_set<int> intSet;
        vector <int> ans;
        unordered_set<int> duplicate;

        for (int i = 0; i < n; i++) {

        if (intSet.find(arr[i]) == intSet.end())
            intSet.insert(arr[i]);
            
        else
            duplicate.insert(arr[i]);
        }

       unordered_set<int>::iterator itr;

       for (itr = duplicate.begin(); itr != duplicate.end(); itr++){
        ans.push_back(*itr);
        }
        
        sort(ans.begin(), ans.end());
        
        if(ans.empty()){
            ans.push_back(-1);
        }
        
        return ans;
    }
};
